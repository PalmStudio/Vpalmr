% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{object_lenght}
\alias{object_lenght}
\title{Lenght of non-linear objects}
\usage{
object_lenght(x, y, res = 1, method = c("loess", "smooth.spline"), ...)
}
\arguments{
\item{x}{The values in the x axis}

\item{y}{The values in the y axis}

\item{res}{The re-sampling resolution, with the same unit as inputs.}

\item{method}{The smoothing method, either using \code{\link[stats:loess]{stats::loess()}} or \code{\link[stats:smooth.spline]{stats::smooth.spline()}}}

\item{...}{Further arguments to pass to the smoothing function}
}
\value{
The distance between points from a curved object
}
\description{
Estimate the smoothed distance between points sampled
in an object
}
\details{
The x and y coordinates must be ordered from first to last point on the object.
The function uses the c(0,0) point coordinate as the reference for the first point length.
The function is used to compute the length of an object from subsampled points
coordinates. Here is how the function works:
\enumerate{
\item The user sample some points from an object and register their X and Y positions
in a euclidean coordinate system, and give the points coordinates as input to the function
\item An approximation of the object curvature is made using a smoothing function on all
measured points
\item The object is re-sampled using the resulting smoothing function with a
sampling resolution of \code{res}.
\item The linear distances between each re-sampled points is computed
\item The distances of each points bewteen the input coordinates are summed, so the estimation of
the distances between the input coordinates are returned
}
}
\note{
The distance from the 0 reference for each points can be computed using \code{\link[base:cumsum]{base::cumsum()}},
and the total length of the object using \code{\link[base:sum]{base::sum()}}.
\code{\link[stats:smooth.spline]{stats::smooth.spline()}} needs at least four unique values, so if the number of points is unknown,
consider using \code{\link[stats:loess]{stats::loess()}} instead.
}
\examples{
\dontrun{
library(Vpalmr)
Segment_lengths= object_lenght(x= 1:10,y= rep(1,10))
Length_from_0= cumsum(Segment_lengths)
Total_length= sum(Segment_lengths)
}
}
